{"version":3,"sources":["contexts/DataContext.tsx","composants/PostOne.tsx","composants/FormAddUser.tsx","composants/Users.tsx","contexts/userReducer.ts","contexts/DataProvider.tsx","App.tsx","index.tsx"],"names":["DataContext","createContext","PostOne","_ref","post","onDelete","react_default","a","createElement","Fragment","id","title","body","Button","variant","onClick","validationSchema","Yup","nom","required","prenom","age","min","FormAddUser","Container","formik_esm","initialValues","dateNais","onSubmit","values","console","log","formik","Form","handleSubmit","FormGroup","FormControl","type","name","value","onChange","handleChange","isInvalid","errors","Control","Feedback","react_datepicker_min_default","selected","dateFormat","className","date","setFieldValue","size","Users","_useContext","useContext","state","dispatch","_useState","useState","_useState2","Object","slicedToArray","show","setShow","posts","handleClose","payload","setCurrentPage","_useState3","_useState4","pageCount","setPageCount","_useState5","_useState6","currentPage","_useState7","itemsPerPage","lastIndexPage","startIndexPage","useEffect","Math","ceil","length","Row","Table","striped","bordered","slice","map","key","composants_PostOne","react_paginate_default","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","forcePage","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","composants_FormAddUser","Footer","userReducer","action","objectSpread","filter","initialState","compteur","DataProvider","children","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_context","prev","next","axios","get","sent","toConsumableArray","stop","apply","this","arguments","getPosts","_useReducer","useReducer","_useReducer2","Provider","App","DataProvider_DataProvider","composants_Users","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.78c7efc1.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\r\nimport {StatePost } from \"../interfaces/interfaces\";\r\nimport { UserType } from \"./userReducer\";\r\n\r\ntype DataContextProps={\r\n  state:StatePost\r\n  dispatch:React.Dispatch<UserType>\r\n}\r\n\r\nexport const DataContext = createContext<DataContextProps>({} as DataContextProps)","import React, { FC } from 'react'\r\nimport { Post } from '../interfaces/interfaces'\r\nimport { Button } from 'react-bootstrap'\r\ntype PostProps = {\r\n  post: Post\r\n  onDelete:(id:number)=>void\r\n}\r\nconst PostOne: FC<PostProps> = ({ post,onDelete }) => {\r\n  return (\r\n    <>\r\n      <td>{post.id}</td>\r\n      <td>{post.title}</td>\r\n      <td>{post.body}</td>\r\n      <td><Button variant='danger' onClick={()=>onDelete(post.id)}>X</Button></td>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostOne\r\n","import React from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { Formik } from 'formik'\r\nimport { Container, FormGroup, FormControl, Col, Button, Form } from 'react-bootstrap'\r\nimport * as Yup from 'yup'\r\n\r\ntype Myvalues = {\r\n  nom: string;\r\n  prenom: string;\r\n  age:number;\r\n  dateNais: Date | null\r\n}\r\nconst validationSchema = Yup.object({\r\n  nom: Yup.string().required(\"nom obligatoire\"),\r\n  prenom: Yup.string().required(\"prenom obligatoire\"),\r\n  age: Yup.number().min(18,'hjkjkjk'),\r\n  //dateNais: Yup.date().required('date obligatoire')\r\n})\r\nconst FormAddUser = () => {\r\n  return (\r\n    <Container>\r\n      <Formik<Myvalues>\r\n        initialValues={{ nom: \"\", prenom: \"\",age:0,dateNais:null }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => console.log(values)}\r\n      >\r\n        {(formik) => {\r\n          const onChangeDate = (date:Date|null)=>{\r\n              formik.setFieldValue('dateNais',date)\r\n              console.log(date)\r\n          }\r\n          return (\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <FormGroup>\r\n                <FormControl \r\n                  type=\"text\"\r\n                  name=\"nom\"\r\n                  value={formik.values.nom}\r\n                  onChange={formik.handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <FormControl \r\n                  type=\"text\"\r\n                  name=\"prenom\"\r\n                  value={formik.values.prenom}\r\n                  onChange={formik.handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <FormControl \r\n                  type=\"text\"\r\n                  name=\"age\"\r\n                  value={formik.values.age}\r\n                  onChange={formik.handleChange}\r\n                  isInvalid={!!formik.errors.age}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                {formik.errors.age}\r\n              </Form.Control.Feedback>\r\n              </FormGroup>\r\n              <FormGroup>\r\n              <DatePicker \r\n                      name=\"dateNais\"\r\n                      selected={formik.values.dateNais}\r\n                      dateFormat=\"dd/MM/yyyy\"\r\n                      className='form-control'\r\n                      onChange={onChangeDate}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button variant=\"info\" size=\"sm\" type=\"submit\">Enregistrer</Button>\r\n              </FormGroup>\r\n\r\n            </Form>\r\n          )\r\n        }}\r\n      </Formik>\r\n\r\n    </Container>\r\n\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default FormAddUser\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { DataContext } from '../contexts/DataContext'\r\nimport { Container, Table,Row,Button,Modal } from 'react-bootstrap'\r\nimport PostOne from './PostOne'\r\nimport ReactPaginate from 'react-paginate'\r\nimport FormAddUser from './FormAddUser'\r\nconst Users = () => {\r\n  const { state, dispatch } = useContext(DataContext)\r\n  const [show,setShow]=useState(false)\r\n  const { posts } = state\r\n  const handleShow = () => setShow(true)\r\n  const handleClose = () => setShow(false)\r\n\r\n  \r\n\r\n  const onDelete = (id: number) => {\r\n    dispatch({ type: \"DELETE\", payload: id })\r\n    setCurrentPage(1)\r\n  }\r\n  //start pagination\r\n  const [pageCount, setPageCount] = useState(0)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  //const [startIndexPage, setStartIndexPage] = useState(0)\r\n  const [itemsPerPage] = useState(12)\r\n  const lastIndexPage = currentPage * itemsPerPage\r\n  const startIndexPage = lastIndexPage - itemsPerPage\r\n\r\n  useEffect(() => {\r\n    setPageCount(Math.ceil(posts.length / itemsPerPage))\r\n  }, [posts.length, itemsPerPage])\r\n  // end pagination\r\n  const handlePageClick = ({selected}: { selected: number }): void => {\r\n    console.log(selected)\r\n    setCurrentPage(selected+1)\r\n  }\r\n  return (\r\n    <>\r\n        <Container className='mt-5'>\r\n          <Row className='no-gutters justify-content-end'>\r\n            <Button variant=\"success mb-2\" size=\"sm\" onClick={handleShow} >Add User</Button>\r\n          </Row>\r\n          <Table striped bordered>\r\n            <thead>\r\n              <tr>\r\n                <th>id</th>\r\n                <th>Title</th>\r\n                <th>Body</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {posts && posts.slice(startIndexPage,lastIndexPage).map(post => (\r\n                <tr key={post.id}>\r\n                  <PostOne post={post} onDelete={onDelete} />\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <ReactPaginate\r\n                      previousLabel={\"prev\"}\r\n                      nextLabel={\"next\"}\r\n                      breakLabel={\"...\"}\r\n                      pageCount={pageCount}\r\n                      marginPagesDisplayed={2}\r\n                      pageRangeDisplayed={2}\r\n                      onPageChange={handlePageClick}\r\n            \r\n                      containerClassName={'pagination pagination-sm justify-content-center'}\r\n                      pageClassName={'page-item'}\r\n                      pageLinkClassName={'page-link'}\r\n                      previousClassName={'page-item'}\r\n                      previousLinkClassName={'page-link'}\r\n                      nextClassName={'page-item'}\r\n                      nextLinkClassName={'page-link'}\r\n                      breakClassName={'page-item'}\r\n                      breakLinkClassName={'page-link'}\r\n                      activeClassName={'active'}\r\n                      forcePage={currentPage-1}\r\n            \r\n\r\n\r\n\r\n          />\r\n        </Container>\r\n\r\n        <Modal show={show} onHide={handleClose} backdrop=\"static\"  keyboard={false}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Form d'Ajout</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body><FormAddUser /></Modal.Body>\r\n          <Modal.Footer className='d-flex justify-content-center'>\r\n            <Button variant=\"danger\" size=\"sm\" onClick={handleClose}>Cancel</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import {StatePost, User } from \"../interfaces/interfaces\";\r\n\r\nexport type UserType=\r\n  | {type:'ADD',payload:User}\r\n  | {type:'DELETE',payload:number}\r\n  | {type:'LISTDATA',payload:StatePost}\r\n\r\nexport const userReducer = (state:StatePost,action:UserType):StatePost=>{\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return state;\r\n    case \"DELETE\":\r\n      console.log(action.payload)\r\n      console.log({...state,posts:state.posts.filter(post=>post.id !== action.payload)})\r\n      return {...state,posts:state.posts.filter(post=>post.id !== action.payload)}\r\n    case \"LISTDATA\":\r\n      return {...state,...action.payload};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { ReactNode, useEffect, useReducer } from 'react'\r\nimport { Post, StatePost } from '../interfaces/interfaces'\r\nimport { DataContext } from './DataContext'\r\nimport { userReducer } from './userReducer'\r\nimport axios from \"axios\"\r\n\r\ntype props={\r\n  children:ReactNode\r\n}\r\nconst initialState:StatePost = {\r\n  posts: [],\r\n  compteur: 0\r\n};\r\n\r\n\r\nexport const DataProvider = ({children}:props) => {\r\n  useEffect(()=>{\r\n    const getPosts = async ()=>{\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\")\r\n    const data:Post[] = await res.data\r\n    dispatch({\r\n      type: 'LISTDATA',\r\n      payload:{...initialState,posts:[...data],compteur:34},\r\n    })\r\n  }\r\n    getPosts()\r\n  },[])\r\n  const [state,dispatch] = useReducer(userReducer,initialState)\r\n  return (\r\n    <>\r\n    {state.posts.length >0 && (\r\n    <DataContext.Provider value={{state,dispatch}}>\r\n      {children}\r\n    </DataContext.Provider>\r\n    )}\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\nimport Users from \"./composants/Users\";\nimport {DataProvider} from \"./contexts/DataProvider\";\n\nconst App = ()=> {\n  return (\n    < >\n      <DataProvider>\n        <Users />\n      </DataProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\"\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\n//import 'react-bootstrap/dist/react-bootstrap'\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <>\n    <App />\n  </>\n);\n\n"],"sourceRoot":""}