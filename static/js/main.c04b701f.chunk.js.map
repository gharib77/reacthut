{"version":3,"sources":["contexts/DataContext.tsx","composants/PostOne.tsx","composants/Users.tsx","contexts/userReducer.ts","contexts/DataProvider.tsx","App.tsx","index.tsx"],"names":["DataContext","createContext","PostOne","_ref","post","onDelete","react_default","a","createElement","Fragment","id","title","body","Button","variant","onClick","Users","_useContext","useContext","state","dispatch","posts","type","payload","setCurrentPage","_useState","useState","_useState2","Object","slicedToArray","pageCount","setPageCount","_useState3","_useState4","currentPage","_useState5","itemsPerPage","lastIndexPage","startIndexPage","useEffect","Math","ceil","length","Container","className","Row","size","Table","striped","bordered","slice","map","key","composants_PostOne","react_paginate_default","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","console","log","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","forcePage","userReducer","action","objectSpread","filter","initialState","compteur","DataProvider","children","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_context","prev","next","axios","get","sent","toConsumableArray","stop","apply","this","arguments","getPosts","_useReducer","useReducer","_useReducer2","Provider","value","App","React","DataProvider_DataProvider","composants_Users","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.c04b701f.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\r\nimport {StatePost } from \"../interfaces/interfaces\";\r\nimport { UserType } from \"./userReducer\";\r\n\r\ntype DataContextProps={\r\n  state:StatePost\r\n  dispatch:React.Dispatch<UserType>\r\n}\r\n\r\nexport const DataContext = createContext<DataContextProps>({} as DataContextProps)","import React, { FC } from 'react'\r\nimport { Post } from '../interfaces/interfaces'\r\nimport { Button } from 'react-bootstrap'\r\ntype PostProps = {\r\n  post: Post\r\n  onDelete:(id:number)=>void\r\n}\r\nconst PostOne: FC<PostProps> = ({ post,onDelete }) => {\r\n  return (\r\n    <>\r\n      <td>{post.id}</td>\r\n      <td>{post.title}</td>\r\n      <td>{post.body}</td>\r\n      <td><Button variant='danger' onClick={()=>onDelete(post.id)}>X</Button></td>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostOne\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { DataContext } from '../contexts/DataContext'\r\nimport { Container, Table,Row,Button } from 'react-bootstrap'\r\nimport PostOne from './PostOne'\r\nimport ReactPaginate from 'react-paginate'\r\nconst Users = () => {\r\n  const { state, dispatch } = useContext(DataContext)\r\n  const { posts } = state\r\n  const onDelete = (id: number) => {\r\n    dispatch({ type: \"DELETE\", payload: id })\r\n    setCurrentPage(1)\r\n  }\r\n  //start pagination\r\n  const [pageCount, setPageCount] = useState(0)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  //const [startIndexPage, setStartIndexPage] = useState(0)\r\n  const [itemsPerPage] = useState(12)\r\n  const lastIndexPage = currentPage * itemsPerPage\r\n  const startIndexPage = lastIndexPage - itemsPerPage\r\n\r\n  useEffect(() => {\r\n    setPageCount(Math.ceil(posts.length / itemsPerPage))\r\n  }, [posts.length, itemsPerPage])\r\n  // end pagination\r\n  const handlePageClick = ({selected}: { selected: number }): void => {\r\n    console.log(selected)\r\n    setCurrentPage(selected+1)\r\n  }\r\n  return (\r\n    <>\r\n        <Container className='mt-5'>\r\n          <Row className='no-gutters justify-content-end'>\r\n            <Button variant=\"success mb-2\" size=\"sm\">Add testtt</Button>\r\n          </Row>\r\n          <Table striped bordered>\r\n            <thead>\r\n              <tr>\r\n                <th>id</th>\r\n                <th>Title</th>\r\n                <th>Body</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {posts && posts.slice(startIndexPage,lastIndexPage).map(post => (\r\n                <tr key={post.id}>\r\n                  <PostOne post={post} onDelete={onDelete} />\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <ReactPaginate\r\n                      previousLabel={\"prev\"}\r\n                      nextLabel={\"next\"}\r\n                      breakLabel={\"...\"}\r\n                      pageCount={pageCount}\r\n                      marginPagesDisplayed={2}\r\n                      pageRangeDisplayed={2}\r\n                      onPageChange={handlePageClick}\r\n            \r\n                      containerClassName={'pagination pagination-sm justify-content-center'}\r\n                      pageClassName={'page-item'}\r\n                      pageLinkClassName={'page-link'}\r\n                      previousClassName={'page-item'}\r\n                      previousLinkClassName={'page-link'}\r\n                      nextClassName={'page-item'}\r\n                      nextLinkClassName={'page-link'}\r\n                      breakClassName={'page-item'}\r\n                      breakLinkClassName={'page-link'}\r\n                      activeClassName={'active'}\r\n                      forcePage={currentPage-1}\r\n            \r\n\r\n\r\n\r\n          />\r\n        </Container>\r\n      </>\r\n\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import {StatePost, User } from \"../interfaces/interfaces\";\r\n\r\nexport type UserType=\r\n  | {type:'ADD',payload:User}\r\n  | {type:'DELETE',payload:number}\r\n  | {type:'LISTDATA',payload:StatePost}\r\n\r\nexport const userReducer = (state:StatePost,action:UserType):StatePost=>{\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return state;\r\n    case \"DELETE\":\r\n      console.log(action.payload)\r\n      console.log({...state,posts:state.posts.filter(post=>post.id !== action.payload)})\r\n      return {...state,posts:state.posts.filter(post=>post.id !== action.payload)}\r\n    case \"LISTDATA\":\r\n      return {...state,...action.payload};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { ReactNode, useEffect, useReducer } from 'react'\r\nimport { Post, StatePost } from '../interfaces/interfaces'\r\nimport { DataContext } from './DataContext'\r\nimport { userReducer } from './userReducer'\r\nimport axios from \"axios\"\r\n\r\ntype props={\r\n  children:ReactNode\r\n}\r\nconst initialState:StatePost = {\r\n  posts: [],\r\n  compteur: 0\r\n};\r\n\r\n\r\nexport const DataProvider = ({children}:props) => {\r\n  useEffect(()=>{\r\n    const getPosts = async ()=>{\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\")\r\n    const data:Post[] = await res.data\r\n    dispatch({\r\n      type: 'LISTDATA',\r\n      payload:{...initialState,posts:[...data],compteur:34},\r\n    })\r\n  }\r\n    getPosts()\r\n  },[])\r\n  const [state,dispatch] = useReducer(userReducer,initialState)\r\n  return (\r\n    <>\r\n    {state.posts.length >0 && (\r\n    <DataContext.Provider value={{state,dispatch}}>\r\n      {children}\r\n    </DataContext.Provider>\r\n    )}\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\n\r\n","import Users from \"./composants/Users\";\nimport {DataProvider} from \"./contexts/DataProvider\";\n\nconst App = ()=> {\n  return (\n    < >\n      <DataProvider>\n        <Users />\n      </DataProvider>\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'react-bootstrap/dist/react-bootstrap'\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <>\n    <App />\n  </>\n);\n\n"],"sourceRoot":""}