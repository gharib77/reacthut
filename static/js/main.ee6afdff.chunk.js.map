{"version":3,"sources":["contexts/DataContext.tsx","composants/PostOne.tsx","composants/FormAddUser.tsx","composants/Users.tsx","contexts/userReducer.ts","contexts/DataProvider.tsx","App.tsx","index.tsx"],"names":["DataContext","createContext","PostOne","_ref","user","onDelete","react_default","a","createElement","Fragment","id","nom","prenom","age","Date","test","toLocaleDateString","Button","variant","size","onClick","x_circle_fill","color","pencil","validationSchema","Yup","required","min","dateNais1","nullable","FormAddUser","dispatch","useContext","Container","formik_esm","initialValues","onSubmit","values","newObject","getTime","console","log","type","payload","formik","Form","handleSubmit","FormGroup","FormControl","name","value","onChange","handleChange","isInvalid","errors","Control","Feedback","react_datepicker_min_default","selected","dateFormat","className","date","setFieldValue","onBlur","handleBlur","Text","touched","Users","_useContext","state","_useState","useState","_useState2","Object","slicedToArray","show","setShow","users","handleClose","setCurrentPage","_useState3","_useState4","pageCount","setPageCount","_useState5","_useState6","currentPage","_useState7","itemsPerPage","lastIndexPage","startIndexPage","useEffect","Math","ceil","length","Row","Table","striped","bordered","slice","map","key","composants_PostOne","react_paginate_default","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","forcePage","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","composants_FormAddUser","Footer","userReducer","action","objectSpread","concat","toConsumableArray","filter","initialState","DataProvider","children","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","data","stop","apply","this","arguments","getUsers","_useReducer","useReducer","_useReducer2","Provider","App","wdate","DataProvider_DataProvider","composants_Users","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.ee6afdff.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\r\nimport {UserState1 } from \"../interfaces/interfaces\";\r\nimport { UserType } from \"./userReducer\";\r\n\r\ntype DataContextProps={\r\n  state:UserState1\r\n  dispatch:React.Dispatch<UserType>\r\n}\r\n\r\nexport const DataContext = createContext<DataContextProps>({} as DataContextProps)","import React, { FC } from 'react'\r\nimport { Personne } from '../interfaces/interfaces'\r\nimport { Button } from 'react-bootstrap'\r\nimport * as Icon from 'react-bootstrap-icons';\r\n\r\ntype PostProps = {\r\n  user: Personne\r\n  onDelete:(id:number)=>void\r\n}\r\nconst PostOne: FC<PostProps> = ({ user,onDelete }) => {\r\n  return (\r\n    <>\r\n      <td >{user.id}</td>\r\n      <td>{user.nom}</td>\r\n      <td>{user.prenom}</td>\r\n      <td>{user.age}</td>\r\n      <td>{new Date(user.test).toLocaleDateString('Fr')}</td>\r\n      <td>\r\n        <Button variant=\"light\" size=\"sm\" onClick={()=>onDelete(user.id)}><Icon.XCircleFill color=\"red\" size={20} /></Button>\r\n        &nbsp;&nbsp;\r\n        <Button variant=\"light\" size=\"sm\" onClick={()=>onDelete(user.id)}><Icon.Pencil color=\"#ffc107\" size={20}/></Button>\r\n\r\n        </td>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostOne\r\n","import React, { useContext } from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { Formik } from 'formik'\r\nimport { Container, FormGroup, FormControl, Col, Button, Form } from 'react-bootstrap'\r\nimport * as Yup from 'yup'\r\nimport { DataContext } from '../contexts/DataContext'\r\n\r\ntype Myvalues = {\r\n  nom: string;\r\n  prenom: string;\r\n  age: number;\r\n  dateNais1: Date | null\r\n}\r\nconst validationSchema = Yup.object({\r\n  nom: Yup.string().required(\"nom obligatoire\"),\r\n  prenom: Yup.string().required(\"prenom obligatoire\"),\r\n  age: Yup.number().min(18, 'hjkjkjk'),\r\n  dateNais1: Yup.date().nullable().required('date obligatoire')\r\n})\r\nconst FormAddUser = () => {\r\n  const { dispatch } = useContext(DataContext)\r\n  return (\r\n    <Container>\r\n      <Formik<Myvalues>\r\n        initialValues={{ nom: \"\", prenom: \"\", age: 0, dateNais1: null }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          if (values.dateNais1 !== null) {\r\n            const wdate = values.dateNais1.toLocaleDateString('fr-CA')\r\n            const newObject={id:new Date().getTime(),nom:values.nom,prenom:values.prenom,age:values.age,test:values.dateNais1.toLocaleDateString('fr-CA')}\r\n            console.log(values.dateNais1.toLocaleDateString('fr-CA'))\r\n            dispatch({ type: 'ADD', payload: newObject })\r\n          }\r\n\r\n        }}\r\n      >\r\n        {(formik) => {\r\n          const onChangeDate = (date: Date | null) => {\r\n            formik.setFieldValue('dateNais1', date)\r\n          }\r\n          return (\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <FormGroup>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  name=\"nom\"\r\n                  value={formik.values.nom}\r\n                  onChange={formik.handleChange}\r\n                  isInvalid={!!formik.errors.nom}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {formik.errors.nom}\r\n                </Form.Control.Feedback>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  name=\"prenom\"\r\n                  value={formik.values.prenom}\r\n                  onChange={formik.handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  name=\"age\"\r\n                  value={formik.values.age}\r\n                  onChange={formik.handleChange}\r\n                  isInvalid={!!formik.errors.age}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {formik.errors.age}\r\n                </Form.Control.Feedback>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <DatePicker\r\n                  name=\"dateNais\"\r\n                  selected={formik.values.dateNais1}\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  className='form-control'\r\n                  onChange={onChangeDate}\r\n                  onBlur={formik.handleBlur}\r\n                />\r\n                <Form.Text className=\"text-danger\">\r\n                  {formik.touched.dateNais1 && formik.errors.dateNais1 ? (\r\n                    <div className=\"text-danger\">{formik.errors.dateNais1}</div>\r\n                  ) : null}\r\n                </Form.Text>              </FormGroup>\r\n              <FormGroup>\r\n                <Button variant=\"info\" size=\"sm\" type=\"submit\">Enregistrer</Button>\r\n              </FormGroup>\r\n\r\n            </Form>\r\n          )\r\n        }}\r\n      </Formik>\r\n\r\n    </Container>\r\n\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default FormAddUser\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { DataContext } from '../contexts/DataContext'\r\nimport { Container, Table,Row,Button,Modal } from 'react-bootstrap'\r\nimport PostOne from './PostOne'\r\nimport ReactPaginate from 'react-paginate'\r\nimport FormAddUser from './FormAddUser'\r\nimport \"../composants/users.css\"\r\nimport { Personne } from '../interfaces/interfaces'\r\nconst Users = () => {\r\n  const { state, dispatch } = useContext(DataContext)\r\n  const [show,setShow]=useState(false)\r\n  const { users } = state\r\n  const handleShow = () => setShow(true)\r\n  const handleClose = () => setShow(false)\r\n\r\n  \r\n\r\n  const onDelete = (id: number) => {\r\n    dispatch({ type: \"DELETE\", payload: id })\r\n    setCurrentPage(1)\r\n  }\r\n  //start pagination\r\n  const [pageCount, setPageCount] = useState(0)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  //const [startIndexPage, setStartIndexPage] = useState(0)\r\n  const [itemsPerPage] = useState(12)\r\n  const lastIndexPage = currentPage * itemsPerPage\r\n  const startIndexPage = lastIndexPage - itemsPerPage\r\n\r\n  useEffect(() => {\r\n    setPageCount(Math.ceil(users.length / itemsPerPage))\r\n  }, [users.length, itemsPerPage])\r\n  // end pagination\r\n  const handlePageClick = ({selected}: { selected: number }): void => {\r\n    console.log(selected)\r\n    setCurrentPage(selected+1)\r\n  }\r\n  return (\r\n    <>\r\n        <Container className='mt-5'>\r\n          <Row className='no-gutters justify-content-end'>\r\n            <Button variant=\"success mb-2\" size=\"sm\" onClick={handleShow} >Add User</Button>\r\n          </Row>\r\n          <Table striped bordered size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>id</th>\r\n                <th>nom</th>\r\n                <th>prenom</th>\r\n                <th>age</th>\r\n                <th>date</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users && users.slice(startIndexPage,lastIndexPage).map((user:Personne) => (\r\n                <tr key={user.id}>\r\n                  <PostOne user={user} onDelete={onDelete} />\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <ReactPaginate\r\n                      previousLabel={\"prev\"}\r\n                      nextLabel={\"next\"}\r\n                      breakLabel={\"...\"}\r\n                      pageCount={pageCount}\r\n                      marginPagesDisplayed={2}\r\n                      pageRangeDisplayed={2}\r\n                      onPageChange={handlePageClick}\r\n            \r\n                      containerClassName={'pagination pagination-sm justify-content-center'}\r\n                      pageClassName={'page-item'}\r\n                      pageLinkClassName={'page-link'}\r\n                      previousClassName={'page-item'}\r\n                      previousLinkClassName={'page-link'}\r\n                      nextClassName={'page-item'}\r\n                      nextLinkClassName={'page-link'}\r\n                      breakClassName={'page-item'}\r\n                      breakLinkClassName={'page-link'}\r\n                      activeClassName={'active'}\r\n                      forcePage={currentPage-1}\r\n            \r\n\r\n\r\n\r\n          />\r\n        </Container>\r\n\r\n        <Modal show={show} onHide={handleClose} backdrop=\"static\"  keyboard={false}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Form d'Ajout</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body><FormAddUser /></Modal.Body>\r\n          <Modal.Footer className='d-flex justify-content-center'>\r\n            <Button variant=\"danger\" size=\"sm\" onClick={handleClose}>Cancel</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import {UserState1, Personne } from \"../interfaces/interfaces\";\r\n\r\nexport type UserType=\r\n  | {type:'ADD',payload:Personne}\r\n  | {type:'DELETE',payload:number}\r\n  | {type:'LISTDATA',payload:UserState1}\r\n\r\nexport const userReducer = (state:UserState1,action:UserType):UserState1=>{\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      console.log(action.payload)\r\n      return {...state,users:[...state.users,action.payload]};\r\n    case \"DELETE\":\r\n       return {...state,users:state.users.filter(user=>user.id !== action.payload)}\r\n    case \"LISTDATA\":\r\n      return {...state,...action.payload}\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { ReactNode, useEffect, useReducer } from 'react'\r\nimport { Personne, UserState1 } from '../interfaces/interfaces'\r\nimport { DataContext } from './DataContext'\r\nimport { userReducer } from './userReducer'\r\nimport axios from \"axios\"\r\nimport data from '../db.json'\r\ntype props={\r\n  children:ReactNode\r\n}\r\n// const initialState:StatePost = {\r\n//   posts: [],\r\n//   compteur: 0\r\n// };\r\n// const initialState:UserState = {\r\n//   users: [],\r\n// };\r\nconst initialState:UserState1 = {\r\n  users: [],\r\n};\r\n\r\n\r\nexport const DataProvider = ({children}:props) => {\r\n  useEffect(()=>{\r\n    const getUsers= async ()=>{\r\n      const res:Personne[]=data.users\r\n      dispatch({\r\n        type: 'LISTDATA',\r\n        payload:{...initialState,users:[...res]},\r\n      })\r\n    }\r\n    getUsers()\r\n  },[])\r\n  /*useEffect(()=>{\r\n    const getPosts = async ()=>{\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\")\r\n    const data:Post[] = await res.data\r\n    dispatch({\r\n      type: 'LISTDATA',\r\n      payload:{...initialState,posts:[...data],compteur:34},\r\n    })\r\n  }\r\n    getPosts()\r\n  },[])*/\r\n  const [state,dispatch] = useReducer(userReducer,initialState)\r\n  return (\r\n    <>\r\n    {state.users.length >0 && (\r\n    <DataContext.Provider value={{state,dispatch}}>\r\n      {children}\r\n    </DataContext.Provider>\r\n    )}\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\nimport Users from \"./composants/Users\";\nimport {DataProvider} from \"./contexts/DataProvider\";\n\nconst App = ()=> {\n  const wdate=new Date()\n  console.log(wdate.toLocaleDateString())\n  return (\n    < >\n      <DataProvider>\n        <Users />\n      </DataProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\"\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\n//import 'react-bootstrap/dist/react-bootstrap'\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <>\n    <App />\n  </>\n);\n\n"],"sourceRoot":""}